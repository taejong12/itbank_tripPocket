<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	
	<!-- Spring과 MyBatis를 활용하여 데이터베이스 연동을 구성하는 설정 -->
	
	<!-- 
		propertyConfigurer (속성 파일 설정) 
		데이터베이스 접속 정보를 별도의 프로퍼티 파일 (jdbc.properties)에서 불러오는 역할
	-->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/config/jdbc/jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 
		dataSource (데이터베이스 연결)
		SimpleDriverDataSource는 간단한 데이터베이스 연결을 위한 DataSource 구현체
	-->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- 
		sqlSessionFactory (MyBatis의 SQL 세션 팩토리 설정)
		dataSource → 앞에서 만든 dataSource를 사용해 DB 연결.
		configLocation → MyBatis의 기본 설정 파일 위치 (modelConfig.xml).
		mapperLocations → 실제 SQL을 정의한 매퍼 파일들의 위치 (mybatis/mappers/*.xml).
	 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/model/modelConfig.xml" />
		<property name="mapperLocations" value="classpath:mybatis/mappers/*.xml" />	
	</bean>
	
	<!-- 
		sqlSession (MyBatis SQL 세션 객체) 
		SqlSessionTemplate는 MyBatis의 SqlSession을 Spring 환경에서 사용할 수 있도록 관리하는 객체
	-->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>






